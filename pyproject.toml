
[project]
name = "duckprompt"
version = "1.5.0" # Version after DB config integration
description = "GUI tool to build prompts for LLMs by integrating file contents and attachments, with direct Gemini API integration and DB-based configuration."
readme = "README.md"
requires-python = ">=3.12"
license = { text = "MIT" }
authors = [
  { name = "Your Name", email = "your.email@example.com" },
]
keywords = ["prompt", "llm", "gui", "pyqt5", "developer-tools", "token", "gemini", "claude", "langgraph", "attachment", "multimodal", "xml", "database", "postgresql"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: User Interfaces",
    "Topic :: Utilities",
    "Topic :: Database",
]
dependencies = [
    "pyqt5-qt5==5.15.2",
    "PyQt5",
    "pyyaml",
    "tiktoken",
    "pydantic",
    "google-generativeai",
    "anthropic",
    "pyinstaller>=6.13.0",
    "langgraph",
    "langchain",
    "langchain-google-genai",
    "Pillow",
    "psycopg2-binary>=2.9.10", # PostgreSQL driver
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "mypy",
    "ruff",
    "black",
    "types-PyYAML",
    "types-Pillow",
    "types-psycopg2", # Add type stubs for psycopg2
]

[project.scripts]
# duckprompt = "src.app:main" # Uncomment if needed

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# --- Tool Configurations ---

[tool.uv]
# Add uv specific configurations if needed

[tool.ruff]
line-length = 88
select = [
    "E", "W", "F", "I", "UP", "B", "C4", "SIM", "PTH", "RUF",
]
ignore = ["E501"]
src = ["src", "tests"]
target-version = "py312"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
ignore_missing_imports = true
plugins = ["pydantic.mypy"]
files = ["src", "tests"]
# Add namespace_packages = true if using namespace packages

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-q --maxfail=3 --disable-warnings"
testpaths = ["tests"]
pythonpath = ["src"]

[tool.coverage.run]
source = ["src"]
omit = [
    "src/app.py",
    "src/ui/main_window.py",
    "src/ui/main_window_setup_*.py",
    "src/ui/settings_dialog.py",
    "*/__init__.py",
]

[tool.coverage.report]
fail_under = 70
show_missing = true

[tool.hatch.build.targets.wheel]
packages = ["src"]
